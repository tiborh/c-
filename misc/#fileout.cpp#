#define __cplusplus 201103L // for c++11
//#define __cplusplus 199711L // for c++98 and c++03

#include <iostream>
//#include <cstdio>
//#include <string>
//#include <cassert> // assert()
//#include <cstring> // e.g. for strlen
//#include <ctime>   // for time operations
//#include <cstdlib> // e.g. for srand(time(NULL)) and rand()
//#include <vector>
//#include <fstream> // file operations
//#include <sstream> // stringstream
//#include <limits>  // e.g. numeric_limits<streamsize>::max()
//#include <climits> // e.g. INT_MAX
//#include <cmath>
//#include <iomanip> // e.g. setw, setprecision, setfill, setbase
//#include <typeinfo> // for typeid
//#include <functional> // for lambda
//#include <algorithm>  // e.g. split
//#include <list>


using namespace std;

void draw_squre(int n,ofstream& fh)
{
    int counter = 0;
    int rowstart = 0;
    for (int i = 0; i < n; ++i)
    {
        counter = rowstart;
        for (int j = 0; j < n; ++j)
        {
            fh << setw(static_cast<int>(log10(n)+2)) << counter;
            if (j < n/2)
                counter++;
            else if (j >= n/2)
                counter--;
        }
        fh << endl;
        if (i < n/2)
            rowstart++;
        else if (i >= n/2)
            rowstart--;
    }
}

int main()
{
    const char* fn = "sample.txt";
    ofstream fh;

    fh.open(fn);
    if (fh.is_open())
    {
        draw_squre(51,fh);
        fh.close();
    } else
    {
        cerr << "Unable to open file '" << fn << "'\n";
        return 1;
    }


    return 0;
}

